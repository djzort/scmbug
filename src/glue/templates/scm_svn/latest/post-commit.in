#!/bin/sh

# POST-COMMIT HOOK
#
# The post-commit hook is invoked after a commit.  Subversion runs
# this hook by invoking a program (script, executable, binary, etc.)
# named 'post-commit' (for which this file is a template) with the 
# following ordered arguments:
#
#   [1] REPOS-PATH   (the path to this repository)
#   [2] REV          (the number of the revision just committed)
#
# The default working directory for the invocation is undefined, so
# the program should set one explicitly if it cares.
#
# Because the commit has already completed and cannot be undone,
# the exit code of the hook program is ignored.  The hook program
# can use the 'svnlook' utility to help it examine the
# newly-committed tree.
#
# On a Unix system, the normal procedure is to have 'post-commit'
# invoke other programs to do the real work, though it may do the
# work itself too.
#
# Note that 'post-commit' must be executable by the user(s) who will
# invoke it (typically the user httpd runs as), and that user must
# have filesystem-level permission to access the repository.
#
# On a Windows system, you should name the hook program
# 'post-commit.bat' or 'post-commit.exe',
# but the basic idea is the same.
# 
# Here is an example hook script, for a Unix /bin/sh interpreter:

REPOS="$1"
REV="$2"


# @DEVEL_PRODUCT_NAME@_STANZA_START
#
#
# Call the @DEVEL_PRODUCT_NAME@ integration glue
@DEVEL_CONFIG_PERL_BINARY@ -I ${REPOS}/hooks/lib/@DEVEL_PRODUCT_NAME_LOWER@ ${REPOS}/hooks/bin/@DEVEL_PRODUCT_NAME_LOWER@_activity.pl ${REPOS}/hooks/etc/@DEVEL_PRODUCT_NAME_LOWER@/glue.conf @DEVEL_CONFIG_ACTIVITY_COMMIT@ ${REPOS} ${REV} >&2

exit $?
#
#
# @DEVEL_PRODUCT_NAME@_STANZA_STOP
