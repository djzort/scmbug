. ../lib/common_bugtracker.inc



TEMP_DIR=/tmp
REPOSITORY_ROOT=$TEMP_DIR/testsuite_repository
REPOSITORY_CHECKOUT=$TEMP_DIR/testsuite_repository_checkout

TESTSUITE_COMMON_NOTE="This is an autogenerated log comment from the testsuite."
LOG_TEMPLATE_ID_PREFIX="@DEVEL_CONFIG_LOG_TEMPLATE_BUGID_TOKEN_PREFIX@"
LOG_TEMPLATE_ID_POSTFIX="@DEVEL_CONFIG_LOG_TEMPLATE_BUGID_TOKEN_POSTFIX@"
RESOLUTION_TEMPLATE_ID_PREFIX="@DEVEL_CONFIG_RESOLUTION_TEMPLATE_BUGID_TOKEN_PREFIX@"
RESOLUTION_TEMPLATE_ID_POSTFIX="@DEVEL_CONFIG_RESOLUTION_TEMPLATE_BUGID_TOKEN_POSTFIX@"

SCM_BIN_PATH_INVALID=/path/that/does/not/exist

# Dynamically determine which version of each SCM system is
# used. test_<scm>.sh must have created a file that contains the
# version of the SCM system used
. ../config/testers/$TESTER/scm.inc
SCM_TOOL_VERSION_FILE=../config/tested_scm_version
if [ ! -e $SCM_TOOL_VERSION_FILE ]; then
    echo "SCM tool version file $SCM_TOOL_VERSION_FILE is missing"
    exit -1
else
    SCM_TOOL_VERSION=`cat $SCM_TOOL_VERSION_FILE`
    SCM_TOOL_VERSION_BIN_PATH=${SCM_TOOL_VERSION}
    SCM_TOOL_VERSION_BIN_PATH=SCM_${SCM_TOOL_VERSION_BIN_PATH}_BIN_PATH
    SCM_BIN_PATH=${!SCM_TOOL_VERSION_BIN_PATH}

    if [ -z "$SCM_BIN_PATH" ]; then
	echo "No path specified for $SCM_TOOL_VERSION_BIN_PATH for $SCM_TOOL_VERSION"
	exit -1
    fi

    if [ ! -d $SCM_BIN_PATH ]; then
	echo "Cannot find path $SCM_BIN_PATH of $SCM_TOOL_VERSION_BIN for $SCM_TOOL_VERSION"
	exit -1
    fi

    # Also check if the general path exists
    if [ -z "$SCM_GENERAL_BIN_PATH" ]; then
	echo "No general bin path specified"
	exit -1
    fi
fi



common_replace_multiline_sed()
{
    FILENAME=$1
    MULTILINE_REPLACE_SED=$2

    echo "$MULTILINE_REPLACE_SED" > $TEMP_DIR/multiline_replace.$$
    cat $FILENAME | sed -f $TEMP_DIR/multiline_replace.$$ > $TEMP_DIR/multiline_replace.output.$$

    cat $TEMP_DIR/multiline_replace.output.$$ > $FILENAME
    rm $TEMP_DIR/multiline_replace.output.$$
    rm $TEMP_DIR/multiline_replace.$$
}
